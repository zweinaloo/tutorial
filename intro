

<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>Scrapy入门教程 &mdash; Scrapy 0.24.1 文档</title>
  

  
  

  
  <link href='https://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic|Roboto+Slab:400,700|Inconsolata:400,700&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

  
  
    

  

  
  

  
    <link rel="stylesheet" href="https://media.readthedocs.org/css/sphinx_rtd_theme.css" type="text/css" />
  
    <link rel="stylesheet" href="https://media.readthedocs.org/css/readthedocs-doc-embed.css" type="text/css" />
  

  
    <link rel="top" title="Scrapy 0.24.1 文档" href="../index.html"/>
        <link rel="next" title="例子" href="examples.html"/>
        <link rel="prev" title="安装指南" href="install.html"/>
 
<!-- RTD Extra Head -->



<!-- 
Read the Docs is acting as the canonical URL for your project. 
If you want to change it, more info is available in our docs:
  http://docs.readthedocs.org/en/latest/canonical.html
-->
<link rel="canonical" href="http://scrapy-chs.readthedocs.org/zh_CN/latest/intro/tutorial.html" />

<script type="text/javascript">
  // This is included here because other places don't have access to the pagename variable.
  var READTHEDOCS_DATA = {
    project: "scrapy-chs",
    version: "latest",
    language: "zh_CN",
    page: "intro/tutorial",
    builder: "sphinx",
    theme: "sphinx_rtd_theme",
    docroot: "/",
    source_suffix: ".rst",
    api_host: "https://readthedocs.org",
    commit: "fd306ef34c9df5c93a12e2cfa65d7414169db40a"
  }
  // Old variables
  var doc_version = "latest";
  var doc_slug = "scrapy-chs";
  var page_name = "intro/tutorial";
  var html_theme = "sphinx_rtd_theme";
</script>
<!-- RTD Analytics Code -->
<!-- Included in the header because you don't have a footer block. -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-17997319-1']);
  _gaq.push(['_trackPageview']);


  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!-- end RTD Analytics Code -->
<!-- end RTD <extrahead> -->


  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.6.2/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-nav-search">
        
          <a href="../index.html" class="fa fa-home"> Scrapy</a>
        
        
<div role="search">
  <form id="rtd-search-form" class="wy-form" action="../search.html" method="get">
    <input type="text" name="q" placeholder="Search docs" />
    <input type="hidden" name="check_keywords" value="yes" />
    <input type="hidden" name="area" value="default" />
  </form>
</div>
      </div>

      <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
        
          
          
              <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="overview.html">初窥Scrapy</a><ul>
<li class="toctree-l2"><a class="reference internal" href="overview.html#id1">选择一个网站</a></li>
<li class="toctree-l2"><a class="reference internal" href="overview.html#intro-overview-item">定义您想抓取的数据</a></li>
<li class="toctree-l2"><a class="reference internal" href="overview.html#spider">编写提取数据的Spider</a></li>
<li class="toctree-l2"><a class="reference internal" href="overview.html#id3">执行spider，获取数据</a></li>
<li class="toctree-l2"><a class="reference internal" href="overview.html#id4">查看提取到的数据</a></li>
<li class="toctree-l2"><a class="reference internal" href="overview.html#topics-whatelse">还有什么？</a></li>
<li class="toctree-l2"><a class="reference internal" href="overview.html#id6">接下来</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="install.html">安装指南</a><ul>
<li class="toctree-l2"><a class="reference internal" href="install.html#scrapy">安装Scrapy</a></li>
<li class="toctree-l2"><a class="reference internal" href="install.html#intro-install-platform-notes">平台安装指南</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="current reference internal" href="">Scrapy入门教程</a><ul>
<li class="toctree-l2"><a class="reference internal" href="#id2">创建项目</a></li>
<li class="toctree-l2"><a class="reference internal" href="#item">定义Item</a></li>
<li class="toctree-l2"><a class="reference internal" href="#spider">编写第一个爬虫(Spider)</a></li>
<li class="toctree-l2"><a class="reference internal" href="#id9">保存爬取到的数据</a></li>
<li class="toctree-l2"><a class="reference internal" href="#id10">下一步</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="examples.html">例子</a></li>
</ul>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../topics/commands.html">命令行工具(Command line tools)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/commands.html#scrapy">默认的Scrapy项目结构</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/commands.html#id1">使用 <tt class="docutils literal"><span class="pre">scrapy</span></tt> 工具</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/commands.html#tool-commands">可用的工具命令(tool commands)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/commands.html#id4">自定义项目命令</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/items.html">Items</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/items.html#item">声明Item</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/items.html#item-item-fields">Item字段(Item Fields)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/items.html#id1">与Item配合</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/items.html#id7">扩展Item</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/items.html#id8">Item对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/items.html#field">字段(Field)对象</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/spiders.html">Spiders</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/spiders.html#spider">Spider参数</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/spiders.html#topics-spiders-ref">内置Spider参考手册</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/selectors.html">选择器(Selectors)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/selectors.html#id1">使用选择器(selectors)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/selectors.html#module-scrapy.selector">内建选择器的参考</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/loaders.html">Item Loaders</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/loaders.html#using-item-loaders-to-populate-items">Using Item Loaders to populate items</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/loaders.html#input-and-output-processors">Input and Output processors</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/loaders.html#declaring-item-loaders">Declaring Item Loaders</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/loaders.html#declaring-input-and-output-processors">Declaring Input and Output Processors</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/loaders.html#item-loader-context">Item Loader Context</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/loaders.html#itemloader-objects">ItemLoader objects</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/loaders.html#reusing-and-extending-item-loaders">Reusing and extending Item Loaders</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/loaders.html#module-scrapy.contrib.loader.processor">Available built-in processors</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/shell.html">Scrapy终端(Scrapy shell)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/shell.html#id1">启动终端</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/shell.html#id2">使用终端</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/shell.html#shell-session">终端会话(shell session)样例</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/shell.html#spidershellresponse">在spider中启动shell来查看response</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/item-pipeline.html">Item Pipeline</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/item-pipeline.html#id1">编写你自己的item pipeline</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/item-pipeline.html#id2">Item pipeline 样例</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/item-pipeline.html#id4">启用一个Item Pipeline组件</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/feed-exports.html">Feed exports</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/feed-exports.html#serialization-formats">序列化方式(Serialization formats)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/feed-exports.html#storages">存储(Storages)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/feed-exports.html#uri">存储URI参数</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/feed-exports.html#storage-backends">存储端(Storage backends)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/feed-exports.html#settings">设定(Settings)</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/link-extractors.html">Link Extractors</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/link-extractors.html#module-scrapy.contrib.linkextractors">内置Link Extractor 参考</a></li>
</ul>
</li>
</ul>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../topics/logging.html">Logging</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/logging.html#log-levels">Log levels</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/logging.html#log">如何设置log级别</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/logging.html#log-messages">如何记录信息(log messages)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/logging.html#spiderlog-logging-from-spiders">在Spider中添加log(Logging from Spiders)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/logging.html#module-scrapy.log">scrapy.log模块</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/logging.html#id1">Logging设置</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/stats.html">数据收集(Stats Collection)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/stats.html#topics-stats-usecases">常见数据收集器使用方法</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/stats.html#id2">可用的数据收集器</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/email.html">发送email</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/email.html#id1">简单例子</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/email.html#mailsender">MailSender类参考手册</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/email.html#mail">Mail设置</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/telnetconsole.html">Telnet终端(Telnet Console)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/telnetconsole.html#telnet">如何访问telnet终端</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/telnetconsole.html#id1">telnet终端中可用的变量</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/telnetconsole.html#telnet-console-usage-examples">Telnet console usage examples</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/telnetconsole.html#id3">Telnet终端信号</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/telnetconsole.html#id4">Telnet设定</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/webservice.html">Web Service</a></li>
</ul>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../faq.html">常见问题(FAQ)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#scrapybeautifulsouplxml">Scrapy相BeautifulSoup或lxml比较,如何呢？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#scrapypython">Scrapy支持那些Python版本？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#scrapypython-3">Scrapy支持Python 3么？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#scrapydjango-x">Scrapy是否从Django中&#8221;剽窃&#8221;了X呢？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#scrapyhttp">Scrapy支持HTTP代理么？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#item">如何爬取属性在不同页面的item呢？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#scrapy-importerror-nomodule-named-win32api">Scrapy退出，ImportError: Nomodule named win32api</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#spider">我要如何在spider里模拟用户登录呢?</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#scrapy">Scrapy是以广度优先还是深度优先进行爬取的呢？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#id3">我的Scrapy爬虫有内存泄露，怎么办?</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#id4">如何让Scrapy减少内存消耗?</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#spiderhttp">我能在spider中使用基本HTTP认证么？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#id5">为什么Scrapy下载了英文的页面，而不是我的本国语言？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#id6">我能在哪里找到Scrapy项目的例子？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#scrapy-spider">我能在不创建Scrapy项目的情况下运行一个爬虫(spider)么？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#filtered-offsite-request">我收到了 &#8220;Filtered offsite request&#8221; 消息。如何修复？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#id7">发布Scrapy爬虫到生产环境的推荐方式？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#large-exports-json">我能对大数据(large exports)使用JSON么？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#signal-handler-twisted">我能在信号处理器(signal handler)中返回(Twisted)引用么？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#reponse999">reponse返回的状态值999代表了什么?</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#spider-pdb-set-trace">我能在spider中调用 <tt class="docutils literal"><span class="pre">pdb.set_trace()</span></tt> 来调试么？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#item-dump-json-csv-xml">将所有爬取到的item转存(dump)到JSON/CSV/XML文件的最简单的方法?</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#viewstate">在某些表单中巨大神秘的 <tt class="docutils literal"><span class="pre">__VIEWSTATE</span></tt> 参数是什么？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#xml-csv">分析大XML/CSV数据源的最好方法是?</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#scrapycookies">Scrapy自动管理cookies么？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#id10">如何才能看到Scrapy发出及接收到的Cookies呢？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#id11">要怎么停止爬虫呢?</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#scrapy-bot-ban">如何避免我的Scrapy机器人(bot)被禁止(ban)呢？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#spider-arguments-settings-spider">我应该使用spider参数(arguments)还是设置(settings)来配置spider呢？</a></li>
<li class="toctree-l2"><a class="reference internal" href="../faq.html#xmlxpathitem">我爬取了一个XML文档但是XPath选择器不返回任何的item</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/debug.html">调试(Debugging)Spiders</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/debug.html#parse">Parse命令</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/debug.html#scrapy-shell">Scrapy终端(Shell)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/debug.html#id1">在浏览器中打开</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/debug.html#logging">Logging</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/contracts.html">Spiders Contracts</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/contracts.html#contracts">自定义Contracts</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/practices.html">实践经验(Common Practices)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/practices.html#scrapy">在脚本中运行Scrapy</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/practices.html#spider">同一进程运行多个spider</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/practices.html#distributed-crawls">分布式爬虫(Distributed crawls)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/practices.html#ban">避免被禁止(ban)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/practices.html#item">动态创建Item类</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/broad-crawls.html">通用爬虫(Broad Crawls)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/broad-crawls.html#id1">增加并发</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/broad-crawls.html#log">降低log级别</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/broad-crawls.html#cookies">禁止cookies</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/broad-crawls.html#id2">禁止重试</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/broad-crawls.html#id3">减小下载超时</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/broad-crawls.html#id4">禁止重定向</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/broad-crawls.html#ajax-crawlable-pages">启用 &#8220;Ajax Crawlable Pages&#8221; 爬取</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/firefox.html">借助Firefox来爬取</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/firefox.html#dom">在浏览器中检查DOM的注意事项</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/firefox.html#topics-firefox-addons">对爬取有帮助的实用Firefox插件</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/firebug.html">使用Firebug进行爬取</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/firebug.html#id1">介绍</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/firebug.html#follow">获取到跟进(follow)的链接</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/firebug.html#id4">提取数据</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/leaks.html">调试内存溢出</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/leaks.html#id2">内存泄露的常见原因</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/leaks.html#trackref">使用 <tt class="docutils literal"><span class="pre">trackref</span></tt> 调试内存泄露</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/leaks.html#guppy">使用Guppy调试内存泄露</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/leaks.html#leaks-without-leaks">Leaks without leaks</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/images.html">下载项目图片</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/images.html#id2">使用图片管道</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/images.html#id3">使用样例</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/images.html#topics-images-enabling">开启你的图片管道</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/images.html#id5">图片存储</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/images.html#id7">额外的特性</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/images.html#module-scrapy.contrib.pipeline.images">实现定制图片管道</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/images.html#id12">定制图片管道的例子</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/ubuntu.html">Ubuntu 软件包</a></li>
<li class="toctree-l1"><a class="reference internal" href="../topics/scrapyd.html">Scrapyd</a></li>
<li class="toctree-l1"><a class="reference internal" href="../topics/autothrottle.html">自动限速(AutoThrottle)扩展</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/autothrottle.html#id1">设计目标</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/autothrottle.html#id2">扩展是如何实现的</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/autothrottle.html#autothrottle-algorithm">限速算法</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/autothrottle.html#id4">设置</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/benchmarking.html">Benchmarking</a></li>
<li class="toctree-l1"><a class="reference internal" href="../topics/jobs.html">Jobs: 暂停，恢复爬虫</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/jobs.html#job">Job 路径</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/jobs.html#id1">怎么使用</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/jobs.html#id2">保持状态</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/jobs.html#id3">持久化的一些坑</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/djangoitem.html">DjangoItem</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/djangoitem.html#id1">使用DjangoItem</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/djangoitem.html#id2">DjangoItem注意事项</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/djangoitem.html#django">配置Django的设置</a></li>
</ul>
</li>
</ul>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../topics/architecture.html">架构概览</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/architecture.html#id2">概述</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/architecture.html#id3">组件</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/architecture.html#data-flow">数据流(Data flow)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/architecture.html#event-driven-networking">事件驱动网络(Event-driven networking)</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/downloader-middleware.html">下载器中间件(Downloader Middleware)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/downloader-middleware.html#topics-downloader-middleware-setting">激活下载器中间件</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/downloader-middleware.html#id2">编写您自己的下载器中间件</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/downloader-middleware.html#topics-downloader-middleware-ref">内置下载中间件参考手册</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/spider-middleware.html">Spider中间件(Middleware)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/spider-middleware.html#spider">激活spider中间件</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/spider-middleware.html#id1">编写您自己的spider中间件</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/spider-middleware.html#topics-spider-middleware-ref">内置spider中间件参考手册</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/extensions.html">扩展(Extensions)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/extensions.html#extension-settings">扩展设置(Extension settings)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/extensions.html#id1">加载和激活扩展</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/extensions.html#available-enabled-disabled">可用的(Available)、开启的(enabled)和禁用的(disabled)的扩展</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/extensions.html#disabling-an-extension">禁用扩展(Disabling an extension)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/extensions.html#id2">实现你的扩展</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/extensions.html#topics-extensions-ref">内置扩展介绍</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/api.html">核心API</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/api.html#crawler-api">Crawler API</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/api.html#module-scrapy.settings">设置(Settings) API</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/api.html#module-scrapy.spidermanager">SpiderManager API</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/api.html#module-scrapy.signalmanager">信号(Signals) API</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/api.html#stats-collector-api">状态收集器(Stats Collector) API</a></li>
</ul>
</li>
</ul>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../topics/request-response.html">Requests and Responses</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/request-response.html#request">Request对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/request-response.html#request-meta-special-keys">Request.meta special keys</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/request-response.html#request-subclasses">Request subclasses</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/request-response.html#response-objects">Response objects</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/request-response.html#response-subclasses">Response subclasses</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/settings.html">Settings</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/settings.html#designating-the-settings">指定设定(Designating the settings)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/settings.html#populating-the-settings">获取设定值(Populating the settings)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/settings.html#how-to-access-settings">如何访问设定(How to access settings)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/settings.html#id1">设定名字的命名规则</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/settings.html#topics-settings-ref">内置设定参考手册</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/signals.html">信号(Signals)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/signals.html#deferred-signal-handlers">延迟的信号处理器(Deferred signal handlers)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/signals.html#module-scrapy.signals">内置信号参考手册(Built-in signals reference)</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/exceptions.html">异常(Exceptions)</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/exceptions.html#built-in-exceptions-reference">内置异常参考手册(Built-in Exceptions reference)</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../topics/exporters.html">Item Exporters</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../topics/exporters.html#item-exporter">使用 Item Exporter</a></li>
<li class="toctree-l2"><a class="reference internal" href="../topics/exporters.html#topics-exporters-reference">Item Exporters 参考资料</a></li>
</ul>
</li>
</ul>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../news.html">Release notes</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id1">0.24.4 (2014-08-09)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id2">0.24.3 (2014-08-09)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id3">0.24.2 (2014-07-08)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id4">0.24.1 (2014-06-27)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id5">0.24.0 (2014-06-26)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2014-02-14">0.22.2 (released 2014-02-14)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2014-02-08">0.22.1 (released 2014-02-08)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2014-01-17">0.22.0 (released 2014-01-17)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2013-12-09">0.20.2 (released 2013-12-09)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2013-11-28">0.20.1 (released 2013-11-28)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2013-11-08">0.20.0 (released 2013-11-08)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2013-10-10">0.18.4 (released 2013-10-10)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2013-10-03">0.18.3 (released 2013-10-03)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2013-09-03">0.18.2 (released 2013-09-03)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2013-08-27">0.18.1 (released 2013-08-27)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2013-08-09">0.18.0 (released 2013-08-09)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2013-05-30">0.16.5 (released 2013-05-30)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2013-01-23">0.16.4 (released 2013-01-23)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2012-12-07">0.16.3 (released 2012-12-07)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2012-11-09">0.16.2 (released 2012-11-09)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2012-10-26">0.16.1 (released 2012-10-26)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#released-2012-10-18">0.16.0 (released 2012-10-18)</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id9">0.14.4</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id10">0.14.3</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id11">0.14.2</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id12">0.14.1</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id13">0.14</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id14">0.12</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id15">0.10</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id18">0.9</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id21">0.8</a></li>
<li class="toctree-l2"><a class="reference internal" href="../news.html#id22">0.7</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../contributing.html">Contributing to Scrapy</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../contributing.html#reporting-bugs">Reporting bugs</a></li>
<li class="toctree-l2"><a class="reference internal" href="../contributing.html#writing-patches">Writing patches</a></li>
<li class="toctree-l2"><a class="reference internal" href="../contributing.html#submitting-patches">Submitting patches</a></li>
<li class="toctree-l2"><a class="reference internal" href="../contributing.html#coding-style">Coding style</a></li>
<li class="toctree-l2"><a class="reference internal" href="../contributing.html#scrapy-contrib">Scrapy Contrib</a></li>
<li class="toctree-l2"><a class="reference internal" href="../contributing.html#documentation-policies">Documentation policies</a></li>
<li class="toctree-l2"><a class="reference internal" href="../contributing.html#tests">Tests</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../versioning.html">Versioning and API Stability</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../versioning.html#id1">Versioning</a></li>
<li class="toctree-l2"><a class="reference internal" href="../versioning.html#api-stability">API Stability</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../experimental/index.html">试验阶段特性</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../experimental/index.html#id3">使用外部库插入命令</a></li>
</ul>
</li>
</ul>

          
        
      </div>
      &nbsp;
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
        <a href="../index.html">Scrapy</a>
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          <div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../index.html">Docs</a> &raquo;</li>
      
    <li>Scrapy入门教程</li>
      <li class="wy-breadcrumbs-aside">
        
          <a href="https://github.com/marchtea/scrapy_doc_chs/blob/master/intro/tutorial.rst" class="fa fa-github"> Edit on GitHub</a>
        
      </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document">
            
    
  <div class="section" id="scrapy">
<span id="intro-tutorial"></span><h1>Scrapy入门教程<a class="headerlink" href="#scrapy" title="永久链接至标题">¶</a></h1>
<p>在本篇教程中，我们假定您已经安装好Scrapy。
如若不然，请参考 <a class="reference internal" href="install.html#intro-install"><em>安装指南</em></a> 。</p>
<p>接下来以 <a class="reference external" href="http://www.dmoz.org/">Open Directory Project(dmoz) (dmoz)</a>
为例来讲述爬取。</p>
<p>本篇教程中将带您完成下列任务:</p>
<ol class="arabic simple">
<li>创建一个Scrapy项目</li>
<li>定义提取的Item</li>
<li>编写爬取网站的 <a class="reference internal" href="../topics/spiders.html#topics-spiders"><em>spider</em></a> 并提取 <a class="reference internal" href="../topics/items.html#topics-items"><em>Item</em></a></li>
<li>编写 <a class="reference internal" href="../topics/item-pipeline.html#topics-item-pipeline"><em>Item Pipeline</em></a> 来存储提取到的Item(即数据)</li>
</ol>
<p>Scrapy由 <a class="reference external" href="http://www.python.org">Python</a> 编写。如果您刚接触并且好奇这门语言的特性以及Scrapy的详情，
对于已经熟悉其他语言并且想快速学习Python的编程老手，
我们推荐 <a class="reference external" href="http://learnpythonthehardway.org/book/">Learn Python The Hard Way</a> ，
对于想从Python开始学习的编程新手，
<a class="reference external" href="http://wiki.python.org/moin/BeginnersGuide/NonProgrammers">非程序员的Python学习资料列表</a> 将是您的选择。</p>
<div class="section" id="id2">
<h2>创建项目<a class="headerlink" href="#id2" title="永久链接至标题">¶</a></h2>
<p>在开始爬取之前，您必须创建一个新的Scrapy项目。
进入您打算存储代码的目录中，运行下列命令:</p>
<div class="highlight-python"><div class="highlight"><pre>scrapy startproject tutorial
</pre></div>
</div>
<p>该命令将会创建包含下列内容的 <tt class="docutils literal"><span class="pre">tutorial</span></tt> 目录:</p>
<div class="highlight-python"><div class="highlight"><pre>tutorial/
    scrapy.cfg
    tutorial/
        __init__.py
        items.py
        pipelines.py
        settings.py
        spiders/
            __init__.py
            ...
</pre></div>
</div>
<p>这些文件分别是:</p>
<ul class="simple">
<li><tt class="docutils literal"><span class="pre">scrapy.cfg</span></tt>: 项目的配置文件</li>
<li><tt class="docutils literal"><span class="pre">tutorial/</span></tt>: 该项目的python模块。之后您将在此加入代码。</li>
<li><tt class="docutils literal"><span class="pre">tutorial/items.py</span></tt>: 项目中的item文件.</li>
<li><tt class="docutils literal"><span class="pre">tutorial/pipelines.py</span></tt>: 项目中的pipelines文件.</li>
<li><tt class="docutils literal"><span class="pre">tutorial/settings.py</span></tt>: 项目的设置文件.</li>
<li><tt class="docutils literal"><span class="pre">tutorial/spiders/</span></tt>: 放置spider代码的目录.</li>
</ul>
</div>
<div class="section" id="item">
<h2>定义Item<a class="headerlink" href="#item" title="永久链接至标题">¶</a></h2>
<p><cite>Item</cite> 是保存爬取到的数据的容器；其使用方法和python字典类似，
并且提供了额外保护机制来避免拼写错误导致的未定义字段错误。</p>
<p>类似在ORM中做的一样，您可以通过创建一个 <a class="reference internal" href="../topics/items.html#scrapy.item.Item" title="scrapy.item.Item"><tt class="xref py py-class docutils literal"><span class="pre">scrapy.Item</span></tt></a> 类，
并且定义类型为 <a class="reference internal" href="../topics/items.html#scrapy.item.Field" title="scrapy.item.Field"><tt class="xref py py-class docutils literal"><span class="pre">scrapy.Field</span></tt></a> 的类属性来定义一个Item。
(如果不了解ORM, 不用担心，您会发现这个步骤非常简单)</p>
<p>首先根据需要从dmoz.org获取到的数据对item进行建模。
我们需要从dmoz中获取名字，url，以及网站的描述。
对此，在item中定义相应的字段。编辑 <tt class="docutils literal"><span class="pre">tutorial</span></tt> 目录中的 <tt class="docutils literal"><span class="pre">items.py</span></tt> 文件:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">scrapy</span>

<span class="k">class</span> <span class="nc">DmozItem</span><span class="p">(</span><span class="n">scrapy</span><span class="o">.</span><span class="n">Item</span><span class="p">):</span>
    <span class="n">title</span> <span class="o">=</span> <span class="n">scrapy</span><span class="o">.</span><span class="n">Field</span><span class="p">()</span>
    <span class="n">link</span> <span class="o">=</span> <span class="n">scrapy</span><span class="o">.</span><span class="n">Field</span><span class="p">()</span>
    <span class="n">desc</span> <span class="o">=</span> <span class="n">scrapy</span><span class="o">.</span><span class="n">Field</span><span class="p">()</span>
</pre></div>
</div>
<p>一开始这看起来可能有点复杂，但是通过定义item，
您可以很方便的使用Scrapy的其他方法。而这些方法需要知道您的item的定义。</p>
</div>
<div class="section" id="spider">
<h2>编写第一个爬虫(Spider)<a class="headerlink" href="#spider" title="永久链接至标题">¶</a></h2>
<p>Spider是用户编写用于从单个网站(或者一些网站)爬取数据的类。</p>
<p>其包含了一个用于下载的初始URL，如何跟进网页中的链接以及如何分析页面中的内容，
提取生成 <a class="reference internal" href="../topics/items.html#topics-items"><em>item</em></a> 的方法。</p>
<p>为了创建一个Spider，您必须继承 <a class="reference internal" href="../topics/spiders.html#scrapy.spider.Spider" title="scrapy.spider.Spider"><tt class="xref py py-class docutils literal"><span class="pre">scrapy.Spider</span></tt></a> 类，
且定义以下三个属性:</p>
<ul class="simple">
<li><a class="reference internal" href="../topics/spiders.html#scrapy.spider.Spider.name" title="scrapy.spider.Spider.name"><tt class="xref py py-attr docutils literal"><span class="pre">name</span></tt></a>: 用于区别Spider。
该名字必须是唯一的，您不可以为不同的Spider设定相同的名字。</li>
<li><a class="reference internal" href="../topics/spiders.html#scrapy.spider.Spider.start_urls" title="scrapy.spider.Spider.start_urls"><tt class="xref py py-attr docutils literal"><span class="pre">start_urls</span></tt></a>: 包含了Spider在启动时进行爬取的url列表。
因此，第一个被获取到的页面将是其中之一。
后续的URL则从初始的URL获取到的数据中提取。</li>
<li><a class="reference internal" href="../topics/spiders.html#scrapy.spider.Spider.parse" title="scrapy.spider.Spider.parse"><tt class="xref py py-meth docutils literal"><span class="pre">parse()</span></tt></a> 是spider的一个方法。
被调用时，每个初始URL完成下载后生成的 <a class="reference internal" href="../topics/request-response.html#scrapy.http.Response" title="scrapy.http.Response"><tt class="xref py py-class docutils literal"><span class="pre">Response</span></tt></a>
对象将会作为唯一的参数传递给该函数。
该方法负责解析返回的数据(response data)，提取数据(生成item)以及生成需要进一步处理的URL的 <a class="reference internal" href="../topics/request-response.html#scrapy.http.Request" title="scrapy.http.Request"><tt class="xref py py-class docutils literal"><span class="pre">Request</span></tt></a> 对象。</li>
</ul>
<p>以下为我们的第一个Spider代码，保存在 <tt class="docutils literal"><span class="pre">tutorial/spiders</span></tt> 目录下的 <tt class="docutils literal"><span class="pre">dmoz_spider.py</span></tt> 文件中:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">scrapy</span>

<span class="k">class</span> <span class="nc">DmozSpider</span><span class="p">(</span><span class="n">scrapy</span><span class="o">.</span><span class="n">spider</span><span class="o">.</span><span class="n">Spider</span><span class="p">):</span>
    <span class="n">name</span> <span class="o">=</span> <span class="s">&quot;dmoz&quot;</span>
    <span class="n">allowed_domains</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;dmoz.org&quot;</span><span class="p">]</span>
    <span class="n">start_urls</span> <span class="o">=</span> <span class="p">[</span>
        <span class="s">&quot;http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&quot;</span><span class="p">,</span>
        <span class="s">&quot;http://www.dmoz.org/Computers/Programming/Languages/Python/Resources/&quot;</span>
    <span class="p">]</span>

    <span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">response</span><span class="p">):</span>
        <span class="n">filename</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">url</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">)[</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s">&#39;wb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span>
</pre></div>
</div>
<div class="section" id="id3">
<h3>爬取<a class="headerlink" href="#id3" title="永久链接至标题">¶</a></h3>
<p>进入项目的根目录，执行下列命令启动spider:</p>
<div class="highlight-python"><div class="highlight"><pre>scrapy crawl dmoz
</pre></div>
</div>
<p><tt class="docutils literal"><span class="pre">crawl</span> <span class="pre">dmoz</span></tt> 启动用于爬取 <tt class="docutils literal"><span class="pre">dmoz.org</span></tt> 的spider，您将得到类似的输出:</p>
<div class="highlight-python"><div class="highlight"><pre>2014-01-23 18:13:07-0400 [scrapy] INFO: Scrapy started (bot: tutorial)
2014-01-23 18:13:07-0400 [scrapy] INFO: Optional features available: ...
2014-01-23 18:13:07-0400 [scrapy] INFO: Overridden settings: {}
2014-01-23 18:13:07-0400 [scrapy] INFO: Enabled extensions: ...
2014-01-23 18:13:07-0400 [scrapy] INFO: Enabled downloader middlewares: ...
2014-01-23 18:13:07-0400 [scrapy] INFO: Enabled spider middlewares: ...
2014-01-23 18:13:07-0400 [scrapy] INFO: Enabled item pipelines: ...
2014-01-23 18:13:07-0400 [dmoz] INFO: Spider opened
2014-01-23 18:13:08-0400 [dmoz] DEBUG: Crawled (200) &lt;GET http://www.dmoz.org/Computers/Programming/Languages/Python/Resources/&gt; (referer: None)
2014-01-23 18:13:09-0400 [dmoz] DEBUG: Crawled (200) &lt;GET http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt; (referer: None)
2014-01-23 18:13:09-0400 [dmoz] INFO: Closing spider (finished)
</pre></div>
</div>
<p>查看包含 <tt class="docutils literal"><span class="pre">[dmoz]</span></tt> 的输出，可以看到输出的log中包含定义在 <tt class="docutils literal"><span class="pre">start_urls</span></tt> 的初始URL，并且与spider中是一一对应的。在log中可以看到其没有指向其他页面( <tt class="docutils literal"><span class="pre">(referer:None)</span></tt> )。</p>
<p>除此之外，更有趣的事情发生了。就像我们 <tt class="docutils literal"><span class="pre">parse</span></tt> 方法指定的那样，有两个包含url所对应的内容的文件被创建了: <em>Book</em> , <em>Resources</em> 。</p>
<div class="section" id="id4">
<h4>刚才发生了什么？<a class="headerlink" href="#id4" title="永久链接至标题">¶</a></h4>
<p>Scrapy为Spider的 <tt class="docutils literal"><span class="pre">start_urls</span></tt> 属性中的每个URL创建了 <a class="reference internal" href="../topics/request-response.html#scrapy.http.Request" title="scrapy.http.Request"><tt class="xref py py-class docutils literal"><span class="pre">scrapy.Request</span></tt></a> 对象，并将 <tt class="docutils literal"><span class="pre">parse</span></tt> 方法作为回调函数(callback)赋值给了Request。</p>
<p>Request对象经过调度，执行生成 <a class="reference internal" href="../topics/request-response.html#scrapy.http.Response" title="scrapy.http.Response"><tt class="xref py py-class docutils literal"><span class="pre">scrapy.http.Response</span></tt></a> 对象并送回给spider <a class="reference internal" href="../topics/spiders.html#scrapy.spider.Spider.parse" title="scrapy.spider.Spider.parse"><tt class="xref py py-meth docutils literal"><span class="pre">parse()</span></tt></a> 方法。</p>
</div>
</div>
<div class="section" id="id5">
<h3>提取Item<a class="headerlink" href="#id5" title="永久链接至标题">¶</a></h3>
<div class="section" id="selectors">
<h4>Selectors选择器简介<a class="headerlink" href="#selectors" title="永久链接至标题">¶</a></h4>
<p>从网页中提取数据有很多方法。Scrapy使用了一种基于 <a class="reference external" href="http://www.w3.org/TR/xpath">XPath</a> 和 <a class="reference external" href="http://www.w3.org/TR/selectors">CSS</a> 表达式机制:
<a class="reference internal" href="../topics/selectors.html#topics-selectors"><em>Scrapy Selectors</em></a> 。
关于selector和其他提取机制的信息请参考 <a class="reference internal" href="../topics/selectors.html#topics-selectors"><em>Selector文档</em></a> 。</p>
<p>这里给出XPath表达式的例子及对应的含义:</p>
<ul class="simple">
<li><tt class="docutils literal"><span class="pre">/html/head/title</span></tt>: 选择HTML文档中 <tt class="docutils literal"><span class="pre">&lt;head&gt;</span></tt> 标签内的 <tt class="docutils literal"><span class="pre">&lt;title&gt;</span></tt> 元素</li>
<li><tt class="docutils literal"><span class="pre">/html/head/title/text()</span></tt>: 选择上面提到的 <tt class="docutils literal"><span class="pre">&lt;title&gt;</span></tt> 元素的文字</li>
<li><tt class="docutils literal"><span class="pre">//td</span></tt>: 选择所有的 <tt class="docutils literal"><span class="pre">&lt;td&gt;</span></tt> 元素</li>
<li><tt class="docutils literal"><span class="pre">//div[&#64;class=&quot;mine&quot;]</span></tt>: 选择所有具有 <tt class="docutils literal"><span class="pre">class=&quot;mine&quot;</span></tt> 属性的 <tt class="docutils literal"><span class="pre">div</span></tt> 元素</li>
</ul>
<p>上边仅仅是几个简单的XPath例子，XPath实际上要比这远远强大的多。
如果您想了解的更多，我们推荐 <a class="reference external" href="http://www.w3school.com.cn/xpath/index.asp">这篇XPath教程</a> 。</p>
<p>为了配合XPath，Scrapy除了提供了 <a class="reference internal" href="../topics/selectors.html#scrapy.selector.Selector" title="scrapy.selector.Selector"><tt class="xref py py-class docutils literal"><span class="pre">Selector</span></tt></a>
之外，还提供了方法来避免每次从response中提取数据时生成selector的麻烦。</p>
<p>Selector有四个基本的方法(点击相应的方法可以看到详细的API文档):</p>
<ul class="simple">
<li><a class="reference internal" href="../topics/selectors.html#scrapy.selector.Selector.xpath" title="scrapy.selector.Selector.xpath"><tt class="xref py py-meth docutils literal"><span class="pre">xpath()</span></tt></a>: 传入xpath表达式，返回该表达式所对应的所有节点的selector list列表 。</li>
<li><a class="reference internal" href="../topics/selectors.html#scrapy.selector.Selector.css" title="scrapy.selector.Selector.css"><tt class="xref py py-meth docutils literal"><span class="pre">css()</span></tt></a>: 传入CSS表达式，返回该表达式所对应的所有节点的selector list列表.</li>
<li><a class="reference internal" href="../topics/selectors.html#scrapy.selector.Selector.extract" title="scrapy.selector.Selector.extract"><tt class="xref py py-meth docutils literal"><span class="pre">extract()</span></tt></a>: 序列化该节点为unicode字符串并返回list。</li>
<li><a class="reference internal" href="../topics/selectors.html#scrapy.selector.Selector.re" title="scrapy.selector.Selector.re"><tt class="xref py py-meth docutils literal"><span class="pre">re()</span></tt></a>: 根据传入的正则表达式对数据进行提取，返回unicode字符串list列表。</li>
</ul>
</div>
<div class="section" id="shellselector">
<h4>在Shell中尝试Selector选择器<a class="headerlink" href="#shellselector" title="永久链接至标题">¶</a></h4>
<p>为了介绍Selector的使用方法，接下来我们将要使用内置的 <a class="reference internal" href="../topics/shell.html#topics-shell"><em>Scrapy shell</em></a> 。Scrapy Shell需要您预装好IPython(一个扩展的Python终端)。</p>
<p>您需要进入项目的根目录，执行下列命令来启动shell:</p>
<div class="highlight-python"><div class="highlight"><pre>scrapy shell &quot;http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&quot;
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">注解</p>
<p class="last">当您在终端运行Scrapy时，请一定记得给url地址加上引号，否则包含参数的url(例如 <tt class="docutils literal"><span class="pre">&amp;</span></tt> 字符)会导致Scrapy运行失败。</p>
</div>
<p>shell的输出类似:</p>
<div class="highlight-python"><div class="highlight"><pre>[ ... Scrapy log here ... ]

2015-01-07 22:01:53+0800 [domz] DEBUG: Crawled (200) &lt;GET http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt; (referer: None)
[s] Available Scrapy objects:
[s]   crawler    &lt;scrapy.crawler.Crawler object at 0x02CE2530&gt;
[s]   item       {}
[s]   request    &lt;GET http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt;
[s]   response   &lt;200 http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt;
[s]   sel        &lt;Selector xpath=None data=u&#39;&lt;html lang=&quot;en&quot;&gt;\r\n&lt;head&gt;\r\n&lt;meta http-equ&#39;&gt;
[s]   settings   &lt;CrawlerSettings module=&lt;module &#39;tutorial.settings&#39; from &#39;tutorial\settings.pyc&#39;&gt;&gt;
[s]   spider     &lt;DomzSpider &#39;domz&#39; at 0x302e350&gt;
[s] Useful shortcuts:
[s]   shelp()           Shell help (print this help)
[s]   fetch(req_or_url) Fetch request (or URL) and update local objects
[s]   view(response)    View response in a browser

&gt;&gt;&gt;
</pre></div>
</div>
<p>当shell载入后，您将得到一个包含response数据的本地 <tt class="docutils literal"><span class="pre">response</span></tt> 变量。输入 <tt class="docutils literal"><span class="pre">response.body</span></tt> 将输出response的包体， 输出 <tt class="docutils literal"><span class="pre">response.headers</span></tt> 可以看到response的包头。</p>
<p>更为重要的是，当输入 <tt class="docutils literal"><span class="pre">response.selector</span></tt> 时，
您将获取到一个可以用于查询返回数据的selector(选择器)，
以及映射到 <tt class="docutils literal"><span class="pre">response.selector.xpath()</span></tt> 、 <tt class="docutils literal"><span class="pre">response.selector.css()</span></tt> 的
快捷方法(shortcut): <tt class="docutils literal"><span class="pre">response.xpath()</span></tt> 和 <tt class="docutils literal"><span class="pre">response.css()</span></tt> 。</p>
<p>同时，shell根据response提前初始化了变量 <tt class="docutils literal"><span class="pre">sel</span></tt> 。该selector根据response的类型自动选择最合适的分析规则(XML vs HTML)。</p>
<p>让我们来试试:</p>
<div class="highlight-python"><div class="highlight"><pre>In [1]: sel.xpath(&#39;//title&#39;)
Out[1]: [&lt;Selector xpath=&#39;//title&#39; data=u&#39;&lt;title&gt;Open Directory - Computers: Progr&#39;&gt;]

In [2]: sel.xpath(&#39;//title&#39;).extract()
Out[2]: [u&#39;&lt;title&gt;Open Directory - Computers: Programming: Languages: Python: Books&lt;/title&gt;&#39;]

In [3]: sel.xpath(&#39;//title/text()&#39;)
Out[3]: [&lt;Selector xpath=&#39;//title/text()&#39; data=u&#39;Open Directory - Computers: Programming:&#39;&gt;]

In [4]: sel.xpath(&#39;//title/text()&#39;).extract()
Out[4]: [u&#39;Open Directory - Computers: Programming: Languages: Python: Books&#39;]

In [5]: sel.xpath(&#39;//title/text()&#39;).re(&#39;(\w+):&#39;)
Out[5]: [u&#39;Computers&#39;, u&#39;Programming&#39;, u&#39;Languages&#39;, u&#39;Python&#39;]
</pre></div>
</div>
</div>
<div class="section" id="id7">
<h4>提取数据<a class="headerlink" href="#id7" title="永久链接至标题">¶</a></h4>
<p>现在，我们来尝试从这些页面中提取些有用的数据。</p>
<p>您可以在终端中输入 <tt class="docutils literal"><span class="pre">response.body</span></tt> 来观察HTML源码并确定合适的XPath表达式。不过，这任务非常无聊且不易。您可以考虑使用Firefox的Firebug扩展来使得工作更为轻松。详情请参考 <a class="reference internal" href="../topics/firebug.html#topics-firebug"><em>使用Firebug进行爬取</em></a> 和 <a class="reference internal" href="../topics/firefox.html#topics-firefox"><em>借助Firefox来爬取</em></a> 。</p>
<p>在查看了网页的源码后，您会发现网站的信息是被包含在 <em>第二个</em> <tt class="docutils literal"><span class="pre">&lt;ul&gt;</span></tt> 元素中。</p>
<p>我们可以通过这段代码选择该页面中网站列表里所有 <tt class="docutils literal"><span class="pre">&lt;li&gt;</span></tt> 元素:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;//ul/li&#39;</span><span class="p">)</span>
</pre></div>
</div>
<p>网站的描述:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;//ul/li/text()&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
</pre></div>
</div>
<p>网站的标题:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;//ul/li/a/text()&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
</pre></div>
</div>
<p>以及网站的链接:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;//ul/li/a/@href&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
</pre></div>
</div>
<p>之前提到过，每个 <tt class="docutils literal"><span class="pre">.xpath()</span></tt> 调用返回selector组成的list，因此我们可以拼接更多的 <tt class="docutils literal"><span class="pre">.xpath()</span></tt> 来进一步获取某个节点。我们将在下边使用这样的特性:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">for</span> <span class="n">sel</span> <span class="ow">in</span> <span class="n">response</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;//ul/li&#39;</span><span class="p">):</span>
    <span class="n">title</span> <span class="o">=</span> <span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;a/text()&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
    <span class="n">link</span> <span class="o">=</span> <span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;a/@href&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
    <span class="n">desc</span> <span class="o">=</span> <span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;text()&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
    <span class="k">print</span> <span class="n">title</span><span class="p">,</span> <span class="n">link</span><span class="p">,</span> <span class="n">desc</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">注解</p>
<p class="last">关于嵌套selctor的更多详细信息，请参考 <a class="reference internal" href="../topics/selectors.html#topics-selectors-nesting-selectors"><em>嵌套选择器(selectors)</em></a> 以及 <a class="reference internal" href="../topics/selectors.html#topics-selectors"><em>选择器(Selectors)</em></a> 文档中的 <a class="reference internal" href="../topics/selectors.html#topics-selectors-relative-xpaths"><em>使用相对XPaths</em></a> 部分。</p>
</div>
<p>在我们的spider中加入这段代码:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">scrapy</span>

<span class="k">class</span> <span class="nc">DmozSpider</span><span class="p">(</span><span class="n">scrapy</span><span class="o">.</span><span class="n">Spider</span><span class="p">):</span>
    <span class="n">name</span> <span class="o">=</span> <span class="s">&quot;dmoz&quot;</span>
    <span class="n">allowed_domains</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;dmoz.org&quot;</span><span class="p">]</span>
    <span class="n">start_urls</span> <span class="o">=</span> <span class="p">[</span>
        <span class="s">&quot;http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&quot;</span><span class="p">,</span>
        <span class="s">&quot;http://www.dmoz.org/Computers/Programming/Languages/Python/Resources/&quot;</span>
    <span class="p">]</span>

    <span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">response</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">sel</span> <span class="ow">in</span> <span class="n">response</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;//ul/li&#39;</span><span class="p">):</span>
            <span class="n">title</span> <span class="o">=</span> <span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;a/text()&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
            <span class="n">link</span> <span class="o">=</span> <span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;a/@href&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
            <span class="n">desc</span> <span class="o">=</span> <span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;text()&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
            <span class="k">print</span> <span class="n">title</span><span class="p">,</span> <span class="n">link</span><span class="p">,</span> <span class="n">desc</span>
</pre></div>
</div>
<p>现在尝试再次爬取dmoz.org，您将看到爬取到的网站信息被成功输出:</p>
<div class="highlight-python"><div class="highlight"><pre>scrapy crawl dmoz
</pre></div>
</div>
</div>
</div>
<div class="section" id="id8">
<h3>使用item<a class="headerlink" href="#id8" title="永久链接至标题">¶</a></h3>
<p><a class="reference internal" href="../topics/items.html#scrapy.item.Item" title="scrapy.item.Item"><tt class="xref py py-class docutils literal"><span class="pre">Item</span></tt></a> 对象是自定义的python字典。
您可以使用标准的字典语法来获取到其每个字段的值。(字段即是我们之前用Field赋值的属性):</p>
<div class="highlight-python"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">item</span> <span class="o">=</span> <span class="n">DmozItem</span><span class="p">()</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">item</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;Example title&#39;</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">item</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">]</span>
<span class="go">&#39;Example title&#39;</span>
</pre></div>
</div>
<p>一般来说，Spider将会将爬取到的数据以 <a class="reference internal" href="../topics/items.html#scrapy.item.Item" title="scrapy.item.Item"><tt class="xref py py-class docutils literal"><span class="pre">Item</span></tt></a> 对象返回。所以为了将爬取的数据返回，我们最终的代码将是:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">scrapy</span>

<span class="kn">from</span> <span class="nn">tutorial.items</span> <span class="kn">import</span> <span class="n">DmozItem</span>

<span class="k">class</span> <span class="nc">DmozSpider</span><span class="p">(</span><span class="n">scrapy</span><span class="o">.</span><span class="n">Spider</span><span class="p">):</span>
    <span class="n">name</span> <span class="o">=</span> <span class="s">&quot;dmoz&quot;</span>
    <span class="n">allowed_domains</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;dmoz.org&quot;</span><span class="p">]</span>
    <span class="n">start_urls</span> <span class="o">=</span> <span class="p">[</span>
        <span class="s">&quot;http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&quot;</span><span class="p">,</span>
        <span class="s">&quot;http://www.dmoz.org/Computers/Programming/Languages/Python/Resources/&quot;</span>
    <span class="p">]</span>

    <span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">response</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">sel</span> <span class="ow">in</span> <span class="n">response</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;//ul/li&#39;</span><span class="p">):</span>
            <span class="n">item</span> <span class="o">=</span> <span class="n">DmozItem</span><span class="p">()</span>
            <span class="n">item</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;a/text()&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
            <span class="n">item</span><span class="p">[</span><span class="s">&#39;link&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;a/@href&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
            <span class="n">item</span><span class="p">[</span><span class="s">&#39;desc&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">sel</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;text()&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
            <span class="k">yield</span> <span class="n">item</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">注解</p>
<p class="last">您可以在 <a class="reference external" href="https://github.com/scrapy/dirbot">dirbot</a> 项目中找到一个具有完整功能的spider。该项目可以通过 <a class="reference external" href="https://github.com/scrapy/dirbot">https://github.com/scrapy/dirbot</a> 找到。</p>
</div>
<p>现在对dmoz.org进行爬取将会产生 <tt class="docutils literal"><span class="pre">DmozItem</span></tt> 对象:</p>
<div class="highlight-python"><div class="highlight"><pre>[dmoz] DEBUG: Scraped from &lt;200 http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt;
     {&#39;desc&#39;: [u&#39; - By David Mertz; Addison Wesley. Book in progress, full text, ASCII format. Asks for feedback. [author website, Gnosis Software, Inc.\n],
      &#39;link&#39;: [u&#39;http://gnosis.cx/TPiP/&#39;],
      &#39;title&#39;: [u&#39;Text Processing in Python&#39;]}
[dmoz] DEBUG: Scraped from &lt;200 http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt;
     {&#39;desc&#39;: [u&#39; - By Sean McGrath; Prentice Hall PTR, 2000, ISBN 0130211192, has CD-ROM. Methods to build XML applications fast, Python tutorial, DOM and SAX, new Pyxie open source XML processing library. [Prentice Hall PTR]\n&#39;],
      &#39;link&#39;: [u&#39;http://www.informit.com/store/product.aspx?isbn=0130211192&#39;],
      &#39;title&#39;: [u&#39;XML Processing with Python&#39;]}
</pre></div>
</div>
</div>
</div>
<div class="section" id="id9">
<h2>保存爬取到的数据<a class="headerlink" href="#id9" title="永久链接至标题">¶</a></h2>
<p>最简单存储爬取的数据的方式是使用 <a class="reference internal" href="../topics/feed-exports.html#topics-feed-exports"><em>Feed exports</em></a>:</p>
<div class="highlight-python"><div class="highlight"><pre>scrapy crawl dmoz -o items.json
</pre></div>
</div>
<p>该命令将采用 <a class="reference external" href="http://en.wikipedia.org/wiki/JSON">JSON</a> 格式对爬取的数据进行序列化，生成 <tt class="docutils literal"><span class="pre">items.json</span></tt> 文件。</p>
<p>在类似本篇教程里这样小规模的项目中，这种存储方式已经足够。
如果需要对爬取到的item做更多更为复杂的操作，您可以编写
<a class="reference internal" href="../topics/item-pipeline.html#topics-item-pipeline"><em>Item Pipeline</em></a> 。
类似于我们在创建项目时对Item做的，用于您编写自己的
<tt class="docutils literal"><span class="pre">tutorial/pipelines.py</span></tt> 也被创建。
不过如果您仅仅想要保存item，您不需要实现任何的pipeline。</p>
</div>
<div class="section" id="id10">
<h2>下一步<a class="headerlink" href="#id10" title="永久链接至标题">¶</a></h2>
<p>本篇教程仅介绍了Scrapy的基础，还有很多特性没有涉及。请查看 <a class="reference internal" href="overview.html#intro-overview"><em>初窥Scrapy</em></a> 章节中的 <a class="reference internal" href="overview.html#topics-whatelse"><em>还有什么？</em></a> 部分,大致浏览大部分重要的特性。</p>
<p>接着，我们推荐您把玩一个例子(查看 <a class="reference internal" href="examples.html#intro-examples"><em>例子</em></a>)，而后继续阅读 <a class="reference internal" href="../index.html#section-basics"><em>基本概念</em></a> 。</p>
</div>
</div>


    
        <h2>
            讨论
            <a class="headerlink" href="#discuss" title="永久链接至标题">¶</a>
        </h2>

        <div id="disqus_thread"></div>
    

          </div>
          <footer>
  
    <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation">
      
        <a href="examples.html" class="btn btn-neutral float-right" title="例子">Next <span class="fa fa-arrow-circle-right"></span></a>
      
      
        <a href="install.html" class="btn btn-neutral" title="安装指南"><span class="fa fa-arrow-circle-left"></span> Previous</a>
      
    </div>
  

  <hr/>

  <div role="contentinfo">
    <p>
        &copy; 版权所有 2008-2014, written by Scrapy developers, translated by Summer&amp;Friends.
      最后更新于 Apr 10, 2015.
    </p>
  </div>

  Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.
  
</footer>
        </div>
      </div>

    </section>

  </div>
  

  <div class="rst-versions" data-toggle="rst-versions" role="note" aria-label="versions">
    <span class="rst-current-version" data-toggle="rst-current-version">
      <span class="fa fa-book"> Read the Docs</span>
      v: latest
      <span class="fa fa-caret-down"></span>
    </span>
    <div class="rst-other-versions">
      <dl>
        <dt>Versions</dt>
        
          <dd><a href="/zh_CN/latest/">latest</a></dd>
        
          <dd><a href="/zh_CN/stable/">stable</a></dd>
        
          <dd><a href="/zh_CN/master/">master</a></dd>
        
          <dd><a href="/zh_CN/0.24/">0.24</a></dd>
        
          <dd><a href="/zh_CN/0.22/">0.22</a></dd>
        
      </dl>
      <dl>
        <dt>Downloads</dt>
        
          <dd><a href="//readthedocs.org/projects/scrapy-chs/downloads/htmlzip/latest/">htmlzip</a></dd>
        
          <dd><a href="//readthedocs.org/projects/scrapy-chs/downloads/epub/latest/">epub</a></dd>
        
      </dl>
      <dl>
        <dt>On Read the Docs</dt>
          <dd>
            <a href="//readthedocs.org/projects/scrapy-chs/?fromdocs=scrapy-chs">Project Home</a>
          </dd>
          <dd>
            <a href="//readthedocs.org/builds/scrapy-chs/?fromdocs=scrapy-chs">Builds</a>
          </dd>
      </dl>
      <hr/>
      Free document hosting provided by <a href="http://www.readthedocs.org">Read the Docs</a>.

    </div>
  </div>



  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../',
            VERSION:'0.24.1',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true
        };
    </script>
      <script type="text/javascript" src="https://media.readthedocs.org/javascript/jquery/jquery-2.0.3.min.js"></script>
      <script type="text/javascript" src="https://media.readthedocs.org/javascript/jquery/jquery-migrate-1.2.1.min.js"></script>
      <script type="text/javascript" src="https://media.readthedocs.org/javascript/underscore.js"></script>
      <script type="text/javascript" src="https://media.readthedocs.org/javascript/doctools.js"></script>
      <script type="text/javascript" src="../_static/translations.js"></script>
      <script type="text/javascript" src="https://media.readthedocs.org/javascript/readthedocs-doc-embed.js"></script>

  

  
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
  
     
    
    <script type="text/javascript">
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'scrapychs'; // required: replace example with your forum shortname

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
     var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
     dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
     (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
     })();

    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
         (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
           m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
             })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-50189694-1', 'readthedocs.org');
      ga('send', 'pageview');

    </script>
    


</body>
</html>